@using Microsoft.AspNetCore.Identity

@inject SignInManager<Author> SignInManager
@inject UserManager<Author> UserManager
@{
    var userName = User.Claims.FirstOrDefault(x => x.Type == System.Security.Claims.ClaimTypes.Name)?.Value;
}

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <div class="nav-item">
        <a class="nav-link text-dark" id="PublicTimeline" href="/">Public Timeline</a> |
        <a id="privateTimeline" class="nav-link text-dark" href="#" onclick="redirectToPrivateTimeline('@userName')">My Timeline</a> |  
        <a asp-page="/UserInfoPage" title="Manage">About Me</a> |
        <a id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/Index", new { area = "" })"> Logout [@User.Claims.FirstOrDefault(x => x.Type == System.Security.Claims.ClaimTypes.Name)?.Value]</a>
        <script>
            function redirectToPrivateTimeline(username) {
                window.location.href = '/' + username;
            }
        </script>
    </div>
}
else
{
    <div class="nav-item">
        <a class="nav-link text-dark" id="PublicTimeline" href="/">Public Timeline</a> |
        <a class="nav-link text-dark" id="Login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </div>
}
</ul>
