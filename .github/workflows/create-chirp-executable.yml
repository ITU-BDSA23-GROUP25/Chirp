name: create-chirp-executable

on:
  push:
      tags:
        - 'v[0-9]+,[0-9]+,[0-9]+'
      branches:  
        - main 
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: DotNetWeb
  AZURE_WEBAPP_PACKAGE_PATH: '.' # Set this to the path to your web app project, defaults to the repository root:
  DOTNET_VERSION: '7.0.401' # The .NET SDK version to use

jobs:
  publish: 

    runs-on: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Install dependencies
      run: |
        cd src/Chirp.CLI/Chirp.CLI.csproj
        dotnet restore
        cd src/SimpleDB/SimpleDB.csproj
        dotnet restore

    - name: Build
      shell: bash
      run: |
        tag=$(git describe --tags --abbrev=0)
        release_name="App-$tag-${{ matrix.target }}"
        cd DotNet.WebApp
        dotnet build  --configuration Release --no-restore
        dotnet publish src/Chirp.CLI/Program.cs --framework netcoreapp3.1 --runtime "${{ matrix.target }}" -c Release -o "$release_name"

        # Pack files
          if [ "${{ matrix.target }}" == "win-x64" ]; then
            7z a -tzip "${release_name}.zip" "./${release_name}/*"
          else
            tar czvf "${release_name}.tar.gz" "$release_name"
          fi

          # Delete output directory
          rm -r "$release_name"

    - name: Test
      run: |
        cd test/Chirp.CLI.Client.Tests/UnitTest1.cs
        dotnet UnitTest1 --no-restore --verbosity normal
        cd test/Chirp.CSVDB.Tests/UnitTest1.cs
        dotnet UnitTest1 --no-restore --verbosity normal
        
    - name: Publish
      uses: softprops/action-gh-release@v1
      with:
        files: "src/Chirp.CLI/Program.cs"
        token: ${{ secrets.GITHUB_TOKEN }}


    - uses: azure/webapps-deploy@v2
      name: Deploy
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}
        package: '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/dotnet-webapp'
